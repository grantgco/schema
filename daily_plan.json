{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ADD-Friendly Daily Plan",
  "type": "object",
  "required": ["metadata", "overview", "plans"],
  "properties": {
    "metadata": {
      "type": "object",
      "required": ["date", "created"],
      "properties": {
        "date": {
          "type": "string",
          "format": "date",
          "description": "The date this plan is for (YYYY-MM-DD)"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "When this plan was created"
        },
        "energy_level": {
          "type": "string",
          "enum": ["low", "medium", "high"],
          "description": "Expected energy level for the day"
        },
        "location": {
          "type": "string",
          "description": "Primary location for the day (home, office, mixed, etc.)"
        }
      }
    },
    "overview": {
      "type": "object",
      "required": ["theme", "top_priorities"],
      "properties": {
        "theme": {
          "type": "string",
          "description": "Overall theme or focus for the day"
        },
        "energy_pattern": {
          "type": "string",
          "description": "When you typically have peak focus (e.g., 'Morning Peak Focus')"
        },
        "top_priorities": {
          "type": "array",
          "minItems": 1,
          "maxItems": 5,
          "items": {
            "type": "object",
            "required": ["task", "priority"],
            "properties": {
              "task": {
                "type": "string",
                "description": "The priority task description"
              },
              "priority": {
                "type": "integer",
                "minimum": 1,
                "maximum": 5,
                "description": "Priority rank (1 = highest)"
              },
              "time_sensitive": {
                "type": "boolean",
                "default": false,
                "description": "Whether this task has a hard deadline today"
              },
              "estimated_duration": {
                "type": "string",
                "pattern": "^\\d+[hm]$",
                "description": "Estimated time needed (e.g., '2h', '45m')"
              },
              "taskpaper_format": {
                "type": "string",
                "description": "Task in TaskPaper format for future processing"
              }
            }
          }
        },
        "time_sensitive_items": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Items with specific deadlines or appointments"
        }
      }
    },
    "horizons": {
      "type": "object",
      "description": "Future-focused planning and tracking for projects and tasks beyond today",
      "properties": {
        "upcoming_deadlines": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["task", "due_date"],
            "properties": {
              "task": {
                "type": "string",
                "description": "Task or project description"
              },
              "due_date": {
                "type": "string",
                "format": "date",
                "description": "When this is due (YYYY-MM-DD)"
              },
              "days_until_due": {
                "type": "integer",
                "description": "Number of days from today until due date"
              },
              "priority": {
                "type": "string",
                "enum": ["low", "medium", "high", "urgent"],
                "description": "Priority level"
              },
              "project": {
                "type": "string",
                "description": "Parent project this task belongs to"
              },
              "taskpaper_format": {
                "type": "string",
                "description": "Task in TaskPaper format (@due(YYYY-MM-DD) @project(name) @defer(YYYY-MM-DD) etc.)"
              }
            }
          }
        },
        "active_projects": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["name", "status"],
            "properties": {
              "name": {
                "type": "string",
                "description": "Project name"
              },
              "status": {
                "type": "string",
                "enum": ["planning", "active", "on-hold", "waiting", "review"],
                "description": "Current project status"
              },
              "next_action": {
                "type": "string",
                "description": "Next concrete action needed for this project"
              },
              "target_date": {
                "type": "string",
                "format": "date",
                "description": "Target completion date"
              },
              "context": {
                "type": "string",
                "description": "Where/how this work gets done (@home, @office, @calls, etc.)"
              },
              "taskpaper_format": {
                "type": "string",
                "description": "Project in TaskPaper format with tags including @defer(YYYY-MM-DD) for future review dates"
              }
            }
          }
        },
        "someday_maybe": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["item", "category"],
            "properties": {
              "item": {
                "type": "string",
                "description": "Thing you might want to do someday"
              },
              "category": {
                "type": "string",
                "enum": ["project", "learning", "experience", "purchase", "misc"],
                "description": "Type of someday/maybe item"
              },
              "added_date": {
                "type": "string",
                "format": "date",
                "description": "When this was added to the list"
              },
              "energy_required": {
                "type": "string",
                "enum": ["low", "medium", "high"],
                "description": "Energy level needed for this item"
              },
              "taskpaper_format": {
                "type": "string",
                "description": "Item in TaskPaper format (@someday @defer(YYYY-MM-DD) @category etc.)"
              }
            }
          }
        },
        "waiting_for": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["item", "waiting_on"],
            "properties": {
              "item": {
                "type": "string",
                "description": "What you're waiting for"
              },
              "waiting_on": {
                "type": "string",
                "description": "Who or what you're waiting on"
              },
              "date_requested": {
                "type": "string",
                "format": "date",
                "description": "When you made the request"
              },
              "follow_up_date": {
                "type": "string",
                "format": "date",
                "description": "When to follow up if no response"
              },
              "project": {
                "type": "string",
                "description": "Related project if applicable"
              },
              "taskpaper_format": {
                "type": "string",
                "description": "Item in TaskPaper format (@waiting @person @defer(YYYY-MM-DD) etc.)"
              }
            }
          }
        },
        "weekly_review_items": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Items to review in weekly planning sessions"
        }
      }
    },
    "plans": {
      "type": "object",
      "required": ["plan_a"],
      "properties": {
        "plan_a": {
          "$ref": "#/definitions/plan_structure",
          "description": "Ideal flow plan - everything goes smoothly"
        },
        "plan_b": {
          "$ref": "#/definitions/contingency_plan",
          "description": "Modified plan for minor delays (15-30 minutes)"
        },
        "plan_c": {
          "$ref": "#/definitions/contingency_plan",
          "description": "Crisis mode plan - essential items only"
        }
      }
    },
    "strategic_guidance": {
      "type": "object",
      "properties": {
        "energy_management": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Tips for managing energy throughout the day"
        },
        "focus_blocks": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "time_range": {
                "type": "string",
                "pattern": "^\\d{1,2}:\\d{2}-\\d{1,2}:\\d{2}$",
                "description": "Time range in HH:MM-HH:MM format"
              },
              "purpose": {
                "type": "string",
                "description": "What this focus block is for"
              }
            }
          }
        },
        "break_schedule": {
          "type": "string",
          "description": "Guidelines for when to take breaks"
        }
      }
    },
    "assistant_notes": {
      "type": "object",
      "properties": {
        "pre_meeting_checklists": {
          "type": "object",
          "patternProperties": {
            ".*": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "description": "Checklists organized by meeting/task name"
        },
        "quick_wins": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Small tasks that can be done between major items"
        },
        "reminders": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Important reminders or notes"
        },
        "taskpaper_export": {
          "type": "object",
          "description": "Ready-to-use TaskPaper formatted content for external processing",
          "properties": {
            "today_tasks": {
              "type": "string",
              "description": "Today's tasks in TaskPaper format"
            },
            "projects": {
              "type": "string",
              "description": "Active projects in TaskPaper format"
            },
            "waiting_for": {
              "type": "string",
              "description": "Waiting for items in TaskPaper format"
            },
            "someday_maybe": {
              "type": "string",
              "description": "Someday/maybe items in TaskPaper format"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "plan_structure": {
      "type": "object",
      "required": ["time_blocks"],
      "properties": {
        "time_blocks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/time_block"
          }
        },
        "flexible_time": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "time_range": {
                "type": "string",
                "pattern": "^\\d{1,2}:\\d{2}-\\d{1,2}:\\d{2}$"
              },
              "options": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "description": "Time slots with multiple possible activities"
        }
      }
    },
    "contingency_plan": {
      "type": "object",
      "required": ["modifications"],
      "properties": {
        "modifications": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "What changes from Plan A"
        },
        "core_preserved": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Non-negotiable items that must remain"
        },
        "deferred_items": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Tasks that can be moved to another day"
        },
        "time_blocks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/time_block"
          },
          "description": "Modified schedule if different from Plan A"
        }
      }
    },
    "time_block": {
      "type": "object",
      "required": ["time_range", "activities"],
      "properties": {
        "label": {
          "type": "string",
          "description": "Name for this time period (e.g., 'Early Morning')"
        },
        "time_range": {
          "type": "string",
          "pattern": "^\\d{1,2}:\\d{2}-\\d{1,2}:\\d{2}$",
          "description": "Time range in HH:MM-HH:MM format"
        },
        "activities": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["time", "task"],
            "properties": {
              "time": {
                "type": "string",
                "pattern": "^\\d{1,2}:\\d{2}-\\d{1,2}:\\d{2}$",
                "description": "Specific time slot"
              },
              "task": {
                "type": "string",
                "description": "What to do during this time"
              },
              "type": {
                "type": "string",
                "enum": ["focus", "meeting", "admin", "break", "flexible"],
                "description": "Category of activity"
              },
              "subtasks": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Bullet points for complex activities"
              },
              "preparation_needed": {
                "type": "string",
                "description": "What prep is needed before this activity"
              },
              "taskpaper_format": {
                "type": "string",
                "description": "Activity in TaskPaper format with appropriate tags"
              }
            }
          }
        }
      }
    }
  }
}
